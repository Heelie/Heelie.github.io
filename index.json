[{"categories":null,"content":" 常用 官方 PHP Go Rust VueJS Python 学习社区 力扣 极客时间 书栈网 算法与数据处理 conda pandas tensorflow pytorch HugeCTR 在线工具 Process ON docsmall tinypng tablesgenerator 免费图库 pexels pngimg unsplash pixabay 高质量仓库 awesome ","date":"2022-12-01","objectID":"/favorites/:0:0","tags":null,"title":"收藏夹","uri":"/favorites/"},{"categories":["chitchat"],"content":" 博客差不多弄完了（主题还有很多功能配置有待发现），完整记录下整个过程吧，方便同样想搭建自己的博客的朋友参考，也方便自己后面有些操作忘记了再看吧 一开始的选择主题是Leavelt，评论系统是utteranc， 但是这俩都不太理想，Leavelt的代码块样式不是很好，utteranc不能楼中楼回复，也不能自适应黑夜模式 最后使用到的全部功能组件有： - Hugo (博客系统) - FixIt (博客主题) - giscus (评论系统) - algolia (搜索引擎) - GitHub Pages (静态网站托管平台) - Github Action (网站自动部署工具) - 百度统计 (数据分析系统) ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:0:0","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":["chitchat"],"content":"准备环境 ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:1:0","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":["chitchat"],"content":"安装Hugo \u0026 Git 注意 Windows需要安装extended版本，主题需要 我是用的scoop包管理工具，有hugo和hugo-extended两个版本 安装Hugo: https://gohugo.io/installation/ 安装Git: https://git-scm.com/ ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:1:1","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":["chitchat"],"content":"创建站点 hugo new site blog cd blog git init # 添加FixIt主题 git submodule add https://github.com/hugo-fixit/FixIt.git themes/FixIt 目录结构 blog ├── archetypes # 配置文章模板 ├── assets # 第三方库文件 ├── config.toml # 站点配置文件 ├── content # 文章页面内容 ├── data # 站点数据文件 ├── layouts # 页面布局源码，改造主题可不动主题源码 ├── public # 博客构建部署目录 ├── static # 静态文件存放 └── themes # 主题目录 config.toml详细配置 主题给的默认配置怎么说呢，感觉坑有点多，踩了好久，这份配置文件结合了主题本身的配置，主题作者的配置，和一个网友的配置(网友已经忘记是谁了) baseURL = \"https://heelie.github.io/\" title = \"Jay's blog\" theme = \"FixIt\" LanguageCode = \"zh-CN\" defaultContentLanguage = \"zh-cn\" paginate = 12 enableEmoji = true hasCJKLanguage = true preserveTaxonomyNames = true [menu] [[menu.main]] identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"文章\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" weight = 1 # FixIt 0.2.14 | NEW add user-defined content to menu items [menu.main.params] # add css class to a specific menu item class = \"\" # whether set as a draft menu item whose function is similar to a draft post/page draft = false # FixIt 0.2.16 | NEW add fontawesome icon to a specific menu item icon = \"fa-solid fa-archive\" # FixIt 0.2.16 | NEW set menu item type, optional values: [\"mobile\", \"desktop\"] type = \"\" [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 2 [menu.main.params] icon = \"fa-solid fa-th\" [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 3 [menu.main.params] icon = \"fa-solid fa-tags\" [[menu.main]] identifier = \"favorites\" pre = \"\" post = \"\" name = \"收藏\" url = \"/favorites/\" title = \"\" weight = 4 [menu.main.params] icon = \"fa-solid fa-book-bookmark\" [[menu.main]] identifier = \"friends\" pre = \"\" post = \"\" name = \"友链\" url = \"/friends/\" title = \"友情链接\" weight = 5 [menu.main.params] icon = \"fa-solid fa-users\" [[menu.main]] identifier = \"about\" pre = \"\" post = \"\" name = \"关于我\" url = \"/about/\" title = \"\" weight = 6 [menu.main.params] icon = \"fa-solid fa-person\" # ------------------------------------------------------------------------------------- # Theme Core Configuration Settings # ------------------------------------------------------------------------------------- [params] # FixIt 0.2.15 | CHANGED FixIt theme version version = \"0.2.X\" # e.g. \"0.2.X\", \"0.2.15\", \"v0.2.15\" etc. # site description description = \"Getting Things Done.\" # site keywords keywords = [\"Hugo\", \"FixIt\"] # site default theme [\"light\", \"dark\", \"auto\"] defaultTheme = \"auto\" # public git repo url only then enableGitInfo is true gitRepo = \"\" # FixIt 0.1.1 | NEW which hash function used for SRI, when empty, no SRI is used # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # FixIt 0.2.0 | NEW date format dateFormat = \"2006-01-02\" # website images for Open Graph and Twitter Cards images = [] # FixIt 0.2.12 | NEW enable PWA enablePWA = false # FixIt 0.2.14 | NEW whether to add external Icon for external links automatically externalIcon = false # FixIt 0.2.14 | NEW FixIt will, by default, inject a theme meta tag in the HTML head on the home page only. # You can turn it off, but we would really appreciate if you don’t, as this is a good way to watch FixIt's popularity on the rise. disableThemeInject = false # FixIt 0.2.0 | NEW App icon config [params.app] # optional site title override for the app when added to an iOS home screen or Android launcher title = \"FixIt\" # whether to omit favicon resource links noFavicon = false # modern SVG favicon to use in place of older style .png and .ico files svgFavicon = \"\" # Safari mask icon color iconColor = \"#5bbad5\" # Windows v8-10 tile color tileColor = \"#da532c\" # FixIt 0.2.12 | CHANGED Android browser theme color [params.app.themeColor] light = \"#f8f8f8\" dark = \"#252627\" # FixIt 0.2.0 | NEW Search config [params.search] enable = true # type ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:1:2","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":["chitchat"],"content":"创建文章 hugo new posts/file.md 随后可以编辑posts/file.md文件，头参数中修改draft = false，书写markdown格式文本即可 ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:1:3","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":["chitchat"],"content":"本地启动 hugo server 如果只是预览文章，上面的命令为development环境，评论系统、CDN、fingerprint都不会启用，需要启用这些功能，则需要使用下面的命令 hugo server --environment production ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:1:4","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":["chitchat"],"content":"本地构建生成静态文件 hugo -v --gc --minify 生成的供部署的文件默认在public目录下 ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:1:5","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":["chitchat"],"content":"配置评论系统 giscus 是由 GitHub Discussions 驱动的评论系统 在github创建对应的blog仓库 仓库的Settings -\u003e General -\u003e Features项，勾选Discussions开启 然后最主要是下面四个参数，其中repo为自己的仓库，category一般为Announcements，仅供自己和giscus修改，剩下两个参数比较麻烦 repo = \"heelie/heelie.github.io\" repoId = \"\" category = \"Announcements\" categoryId = \"\" 通过github提供的graphQL API查询剩下俩个参数 图片看不清，或者左边不知道怎么选择，可以直接复制下面的把name改为自己的仓库即可 { viewer { login repository(name: \"heelie.github.io\") { id name discussionCategory(slug: \"Announcements\") { id name } } } } 最后把参数填入配置文件，不出意外文章底部就会出现评论模块了 ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:1:6","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":["chitchat"],"content":"配置搜索引擎 algolia搜索引擎配置不是很复杂，创建索引，然后拿到所有的API Keys就可以了 Github一键登录 登陆之后跳转到仪表盘界面，留意一下有一个选项叫API Keys，点击左下角 Settings 设置界面选择 Applications Applications界面应该默认就已经有了一个 application ，直接改名就可以使用了，或者不改名都行 修改完名称之后点击左下角 Settings 上的 Data Sources ，选择 Indices 选择 Create Index 创建一个索引(配置参数要用，需要记录下来) 然后回到首页，点击上面提到的 API Keys ，拿到 Application ID、Search-Only API Key、Admin API Key，其中创建的索引、Application ID和Search-Only API Key需要填入配置文件，因为algolia的records需要自己上传，所以Admin API Key在做 Github Action 自动上传records时需要用到 到此，只需要等上传了records之后就可以做搜索操作了 ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:1:7","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":["chitchat"],"content":"配置百度统计 登陆到百度统计，创建一个站点，随后点击顶部的使用设置，在站点列表中，点击获取代码 然后在本地博客站点的assets目录中创建一个js/custom.js，然后把百度统计获取到的代码去掉前后的\u003cscript\u003e标签，写入custom.js文件中即可 ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:1:8","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":["chitchat"],"content":"配置自动部署 在博客根目录创建.github/workflows/deploy.yml文件 name: github pages release on: push: branches: - main # Set a branch that will trigger a deployment pull_request: jobs: deploy: runs-on: ubuntu-22.04 steps: - name: Checkout uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: latest extended: true - name: Build run: hugo -v --gc --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: github.ref == 'refs/heads/main' with: personal_token: ${{ secrets.PERSONAL_TOKEN }} external_repository: heelie/heelie.github.io publish_dir: ./public publish_branch: main - name: Upload Records uses: iChochy/Algolia-Upload-Records@main env: APPLICATION_ID: ${{secrets.ALGOLIA_APPLICATION_ID}} ADMIN_API_KEY: ${{secrets.ALGOLIA_ADMIN_API_KEY}} INDEX_NAME: ${{secrets.ALGOLIA_INDEX_NAME}} FILE_PATH: ./public/index.json yml文件需要的参数配置在对应的仓库设置中 algolia相关的参数在上面都已经获取到了，其中PERSONAL_TOKEN为github个人设置中生成的token 不出意外可以直接点这里直达Github Tokens设置页面，需要在登陆状态 点击Generate new token Note随便写，Expiration闲麻烦的话直接选择No expiration（选择其他项需要记住按时更新token，不然token过期失效了自动部署脚本就会部署失败了），最后勾选workflow项 然后直接滑到最后点击 Generate token ，点击之后一定要复制保存生成的token，离开页面之后就无法查看了，然后把token保存到仓库配置PERSONAL_TOKEN即可 至此，整个博客的相关搭建操作基本就结束了，开始你的写作吧！ ","date":"2022-12-01","objectID":"/2022/1201_create_blog_step/:1:9","tags":["chitchat"],"title":"记录搭建博客的详细步骤","uri":"/2022/1201_create_blog_step/"},{"categories":null,"content":"Jay's friends","date":"2022-11-30","objectID":"/friends/","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":null,"content":"Base info - nickname: Jay avatar: \"/favicon.png\" url: \"https://heelie.github.io\" description: 对朋友或其站点的说明 ","date":"2022-11-30","objectID":"/friends/:1:0","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":null,"content":"Friendly Reminder Notice 交换链接请按以上格式在评论区留言。（仅限个人非商业博客/网站）  网站失效、停止维护、内容不当可能会被取消链接！ 那些不尊重他人劳动成果、转载不加出处、或其他恶意行为的网站，还请您不要来进行交换了。 ","date":"2022-11-30","objectID":"/friends/:2:0","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":["闲聊杂谈"],"content":"很早就想弄个自己的博客了，想着没事写点啥，记录点啥的，无奈拖延症太严重，文笔也不好，好几次博客都搭好了，但是不知道写什么，就停滞了 这次总算是下定了决心，花费了大概一天时间吧，选择了Hugo+Github Pages的形式弄了这个博客 这样的好处就是，无需任何花费，且写作形式是markdown比较方便，平常就是hugo server写作，写完提交到 github ，接着 github action 自动部署到 github pages 就完事了 坏处就是，站点在github，访问起来比较慢，偶尔还会直接被墙，域名也是github的子域名 后期可能考虑用国内云做静态部署托管，然后在买个域名做别名应该就好很多了 其他更多信息请查看关于我 ","date":"2022-11-29","objectID":"/2022/1129_chitchat/:0:0","tags":["chitchat"],"title":"写在前面","uri":"/2022/1129_chitchat/"},{"categories":null,"content":"欢迎来到小站！ 我是一名90后软件开发工程师，轻度35岁焦虑症患者 2016年入行开始写php，期间因为公司转型为了业务写过java，但是学不到东西，后面还是一直写php，自学golang 维护过easyswoole部分组件，完整贡献了easy-swoole/database-migrate 自学golang的过程中给go-kratos提交过一个小的pr 没什么远大志向吧，生活嘛，向前看 ","date":"2022-11-28","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"}]